<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd">

	<context:property-placeholder location="classpath:db.properties,classpath:jpush.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="maxActive" value="20" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<aop:aspectj-autoproxy expose-proxy="true" />
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<mongo:mongo id="mongo" host="${kaola.mongodb.url}" port="${kaola.mongodb.port}">
		<mongo:options connections-per-host="${kaola.mongodb.connectionsPerHost}"
			threads-allowed-to-block-for-connection-multiplier="${kaola.mongodb.threadsAllowedToBlockForConnectionMultiplier}"
			connect-timeout="${kaola.mongodb.connectTimeout}" max-wait-time="${kaola.mongodb.maxWaitTime}"
			auto-connect-retry="${kaola.mongodb.autoConnectRetry}"
			max-auto-connect-retry-time="10" socket-keep-alive="${kaola.mongodb.socketKeepAlive}"
			socket-timeout="${kaola.mongodb.socketTimeout}" />
	</mongo:mongo>
	
	<mongo:db-factory id="mongoDbFactory" dbname="${kaola.mongodb.db}" mongo-ref="mongo" />
	
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>

	<context:component-scan base-package="com.autoradio.push" />

	<jaxws:endpoint id="pushWebService" implementor="com.autoradio.push.ws.PushWebServiceImpl" address="http://localhost:8080/ws/PushService" />

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	<bean id="batchTransactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="batchTransactionManager" />
	</bean>
	
	<bean id="runIdIncrementer" class="org.springframework.batch.core.launch.support.RunIdIncrementer" />
	
	<bean id="pushRecordItemReader" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="saveState" value="false" />
		<property name="pageSize" value="${pushRecordItemReader.pageSize}" />
		<property name="queryProvider">
			<bean class="org.springframework.batch.item.database.support.MySqlPagingQueryProvider">
				<property name="selectClause" value="select id as id,msg_no as msgNo,udid as udid" />
				<property name="fromClause" value="from push_record_#{jobParameters['msgNo']}" />
				<property name="whereClause" value="where msg_no=#{jobParameters['msgNo']}" />
				<property name="sortKeys">
					<map>
						<entry>
							<key>
								<value>id</value>
							</key>
							<value>ASCENDING</value>
						</entry>
					</map>
				</property>
			</bean>
		</property>
		<property name="rowMapper">
			<bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<property name="mappedClass" value="com.autoradio.push.pojo.PushRecord" />
			</bean>
		</property>
	</bean>
	
	<bean id="importMongoData2MySqlExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" />
	
	<bean id="pushMessageExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
	
	<batch:job id="kaoLaPushJob" incrementer="runIdIncrementer">
		<batch:step id="createPushRecord" next="importMongoData2MySql">
			<batch:tasklet transaction-manager="batchTransactionManager" ref="createPushRecordTasklet" />
		</batch:step>
		<batch:step id="importMongoData2MySql" next="pushMessage">
			<batch:tasklet transaction-manager="batchTransactionManager" ref="importMongoData2MySqlTasklet" />
		</batch:step>
		<batch:step id="pushMessage" next="dropTable">
			<batch:tasklet transaction-manager="batchTransactionManager" task-executor="pushMessageExecutor" throttle-limit="${pushMessage.throttleLimit}">
				<batch:chunk reader="pushRecordItemReader" writer="pushResultWriter" commit-interval="${pushMessage.commitInterval}" skip-limit="${pushMessage.skipLimit}" retry-limit="${pushMessage.retryLimit}">
					<batch:skippable-exception-classes>
						<batch:include class="java.lang.Exception" />
					</batch:skippable-exception-classes>
					<batch:retryable-exception-classes>
						<batch:include class="java.lang.Exception"/>
					</batch:retryable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
		<batch:step id="dropTable">
			<batch:tasklet transaction-manager="batchTransactionManager" ref="dropTableTasklet" />
		</batch:step>
	</batch:job>

</beans>